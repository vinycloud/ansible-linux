---
- name: Preparing Workstation
  hosts: localhost
  connection: local
  tasks:

    - name: Run apt update before start de tasks....
      become: true
      ansible.builtin.apt:
        update_cache: yes

    - name: Installing Linux Apps
      become: true
      apt:
        name: '{{ item }}'
        install_recommends: yes
        state: present
      loop:
          - vim
          - htop
          - curl
          - wget
          - ncdu
          - tree
          - apt-transport-https
          - ca-certificates
          - gnupg
          - python3-pip
          - make
          - git
          - bash-completion
          - gnupg-agent
          - zsh          
          - fonts-hack                   
          - mlocate
          - krita
          - jq
          - mtr
          - guvcview                    
          - vlc
          - gnome-tweaks          
          - wireshark          
          - keepassx          
          - terminator 
          - snapd 

    - block:
      - name: Verify if Oh-My-zsh is installed
        command: test -d /home/{{ ansible_user_id }}/.oh-my-zsh
        register: ohmyzsh
        ignore_errors: true

      - name: Installing Oh-My-zsh
        shell:
          cmd: 'curl -fsL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | bash'
          warn: false
        when: ohmyzsh.rc != 0       

      - name: Changing Default ZSH Theme to Bira
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          regexp: '^ZSH_THEME='
          line: 'ZSH_THEME="bira"'

      - name: Creating ZSH Completion folder
        file:
          path: /home/{{ ansible_user_id }}/.oh-my-zsh/completions
          state: directory
          mode: 0755

      - name: Adding autoload to compinit
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          line: 'autoload -U compinit && compinit'
          state: present
      
    - block:
      - name: Install Google Key
        become: true
        apt_key: 
          url: 'https://dl.google.com/linux/linux_signing_key.pub'
          state: present

      - name: Install Google Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main'
          state: present
          filename: google-chrome

      - name: Install Google Chrome
        become: true
        apt:
          name: google-chrome-stable    

    - block:
      - name: Installing Terraform 1.6.0
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/terraform/1.6.0/terraform_1.6.0_linux_amd64.zip'
          dest: /usr/local/bin
          remote_src: yes       
             
    - block:
      - name: Install Microsoft Key
        become: true
        apt_key:
          url: 'https://packages.microsoft.com/keys/microsoft.asc'
          state: present

      - name: Install VSCode Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main'
          state: present
          filename: vscode

      - name: Install Visual Studio Code
        become: true
        apt:
          name: code

      - name: Install Virtual Studio Code Extensions
        shell:
          cmd: code --install-extension '{{ item }}' 
        loop: 
          - ms-python.python
          - ms-azuretools.vscode-docker
          - bbenoist.vagrant
          - hashicorp.terraform
          - gruntfuggly.todo-tree
          - njpwerner.autodocstring
          - eamodio.gitlens
          - amazonwebservices.aws-toolkit-vscode    
          - codeium.codeium
          - dracula-theme.theme-dracula   
          - infracost.infracost
          - ms-ceintl.vscode-language-pack-pt-br
          - golang.go
          - ms-kubernetes-tools.kind-vscode
          - ms-kubernetes-tools.vscode-kubernetes-tools
          - vscode-icons-team.vscode-icons

    - block: 
      - name: Install Docker Key
        become: true
        apt_key:
          url: 'https://download.docker.com/linux/ubuntu/gpg'
          state: present

      - name: Install Docker Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable'
          state: present
          filename: docker-ce
          
      - name: Install Docker
        become: true
        apt:
          name: docker-ce

      - name: Adding existing user to group Docker
        become: yes
        user: 
          name: '{{ ansible_user_id }}'
          groups: docker 
          append: yes

      - name: Install Docker-Compose
        become: true
        get_url:
          url: 'https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-linux-x86_64'
          dest: '/usr/local/bin/docker-compose'
          mode: 755

      - name: Install Docker Machine Bash Completion
        become: true
        get_url:
          url: 'https://raw.githubusercontent.com/docker/machine/v0.16.2/contrib/completion/bash/docker-machine.bash'
          dest: '/etc/bash_completion.d/docker-machine'

      - name: Install Docker-Compose Bash Completion
        become: true
        get_url:
          url: 'https://raw.githubusercontent.com/docker/compose/1.26.2/contrib/completion/bash/docker-compose'
          dest: '/etc/bash_completion.d/docker-compose'

      - name: Install Docker-Compose and Docker Machine Zsh Completion
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          regexp: '^plugins='
          line: 'plugins=(git docker docker-compose)'
        
    - block:
      - name: Installing Kubectl 1.29.1
        become: true
        get_url:    
          url: 'https://dl.k8s.io/release/v1.29.1/bin/linux/amd64/kubectl'
          dest: /usr/local/bin/kubectl
          mode: 755

      - name: Downloading Kubectx and Kubens 
        become: true
        git:
          repo: 'https://github.com/ahmetb/kubectx'
          dest: /opt/kubectx 

      - name: Creating Symlink to kubectx and kubens 
        become: true
        file:
          src: '/opt/kubectx/{{ item }}'
          dest: '/usr/local/bin/{{ item }}'
          state: link
        with_items:
          - kubectx
          - kubens          

    - block: 
      - name: Install Brave Key
        become: true
        apt_key:
          url: 'https://brave-browser-apt-release.s3.brave.com/brave-core.asc'
          state: present

      - name: Install Brave Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main'
          state: present
          filename: brave

      - name: Install Brave Browser
        become: true
        apt:
          name: brave-browser

      - name: Install Open-Lens
        become: true
        apt:  
          deb: https://github.com/MuhammedKalkan/OpenLens/releases/download/v6.5.2-366/OpenLens-6.5.2-366.amd64.deb

      - name: Install Drawio...
        become: true
        apt:  
          deb: https://github.com/jgraph/drawio-desktop/releases/download/v24.1.0/drawio-amd64-24.1.0.deb 

      - name: Install flameshot 0.8.0...
        become: true
        apt:
          deb: https://github.com/flameshot-org/flameshot/releases/download/v0.8.0/flameshot_ubuntu_0.8.0-1_amd64.deb
          
      - name: Install eksctl        
        shell: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin
          eksctl version  

      - name: Run command curl and salve script helm
        command: curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3        

      - name: Run command chmod
        command: chmod 700 get_helm.sh        
        args:
          chdir: .

      - name: Run script get_helm.sh
        command: ./get_helm.sh
        args:
          chdir: .  

      - name: Download Kind binary...
        become: true
        get_url:
          url: "https://github.com/kubernetes-sigs/kind/releases/latest/download/kind-linux-amd64"
          dest: "/usr/local/bin/kind"
          mode: 755

      - name: Download EKS-Node-Viewer binary...
        become: true
        get_url:
          url: "https://github.com/awslabs/eks-node-viewer/releases/download/v0.6.0/eks-node-viewer_Linux_x86_64"
          dest: "/usr/local/bin/eks-node-viewer"
          mode: 755                     

      - name: Install Spotify...
        become: true        
        community.general.snap:
          name: 'spotify'
          classic: yes
